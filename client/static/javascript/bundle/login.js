(()=>{"use strict";const e={setClass(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(let e of t)this.classList.add(e);return this},setId(e){return this.id=e,this},setText(e){return this.innerText=e,this},setHTML(e){return this.innerHTML=e,this}};function t(e,t){let n=document.createElement(e,t);for(let e in t.attributes)n.setAttribute(e,t.attributes[e]);for(let e of t.classes)n.classList.add(e);return t.id&&(n.id=t.id),n}function n(e){const t=new Uint8Array(e);let n="";for(const e of t)n+=String.fromCharCode(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function i(e){const t=e.replace(/-/g,"+").replace(/_/g,"/"),n=(4-t.length%4)%4,i=t.padEnd(t.length+n,"="),a=atob(i),r=new ArrayBuffer(a.length),o=new Uint8Array(r);for(let e=0;e<a.length;e++)o[e]=a.charCodeAt(e);return r}function a(){return void 0!==window?.PublicKeyCredential&&"function"==typeof window.PublicKeyCredential}function r(e){const{id:t}=e;return{...e,id:i(t),transports:e.transports}}function o(e){return"localhost"===e||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}Object.keys(e).forEach((t=>{Element.prototype[t]=e[t]}));class s extends Error{constructor({message:e,code:t,cause:n,name:i}){super(e,{cause:n}),this.name=i??n.name,this.code=t}}const c=new class{createNewAbortSignal(){if(this.controller){const e=new Error("Cancelling existing WebAuthn API call for new one");e.name="AbortError",this.controller.abort(e)}const e=new AbortController;return this.controller=e,e.signal}cancelCeremony(){if(this.controller){const e=new Error("Manually cancelling existing WebAuthn API call");e.name="AbortError",this.controller.abort(e),this.controller=void 0}}},l=["cross-platform","platform"];function u(e){if(e&&!(l.indexOf(e)<0))return e}function d(e,t){console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${e}. You should report this error to them.\n`,t)}async function p(e,t=!1){if(!a())throw new Error("WebAuthn is not supported in this browser");let l;0!==e.allowCredentials?.length&&(l=e.allowCredentials?.map(r));const d={...e,challenge:i(e.challenge),allowCredentials:l},p={};if(t){if(!await function(){if(!a())return new Promise((e=>e(!1)));const e=window.PublicKeyCredential;return void 0===e.isConditionalMediationAvailable?new Promise((e=>e(!1))):e.isConditionalMediationAvailable()}())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');p.mediation="conditional",d.allowCredentials=[]}let h;p.publicKey=d,p.signal=c.createNewAbortSignal();try{h=await navigator.credentials.get(p)}catch(e){throw function({error:e,options:t}){const{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal instanceof AbortSignal)return new s({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else{if("NotAllowedError"===e.name)return new s({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if("SecurityError"===e.name){const t=window.location.hostname;if(!o(t))return new s({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e});if(n.rpId!==t)return new s({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else if("UnknownError"===e.name)return new s({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}({error:e,options:p})}if(!h)throw new Error("Authentication was not completed");const{id:f,rawId:y,response:w,type:m}=h;let g;return w.userHandle&&(g=n(w.userHandle)),{id:f,rawId:n(y),response:{authenticatorData:n(w.authenticatorData),clientDataJSON:n(w.clientDataJSON),signature:n(w.signature),userHandle:g},type:m,clientExtensionResults:h.getClientExtensionResults(),authenticatorAttachment:u(h.authenticatorAttachment)}}var h,f,y,w,m,g,E,b;async function R(e){let t=e.actions;Array.isArray(t)||(t=[e]);for(let e of t)"collect"===e.action?O(e):"register-passkey"===e.action?C(e):"authenticate-passkey"===e.action?T(e):"init-conditional-ui"===e.action&&v()}async function A(e){fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:m,...e})}).then((async e=>{let t=await e.json();t.done||R(t.value)}))}async function O(e){if(h.innerText=e.message,f.innerText=e.header,w.innerHTML="","email"===e.type){let e=t("input",{attributes:{type:"email",placeholder:"Email",required:!0,autocomplete:"email webauthn"},classes:[],id:""});w.appendChild(e);let n=async t=>{t.preventDefault(),A({value:e.value}),y.removeEventListener("submit",n)};y.addEventListener("submit",n)}else if("binary"===e.type){let e=t("input",{attributes:{type:"checkbox",required:!0},classes:[],id:""});w.appendChild(e);let n=async t=>{t.preventDefault(),A({value:e.checked}),y.removeEventListener("submit",n)};y.addEventListener("submit",n)}else if("choice"===e.type){for(let n=0;n<e.options.length;n++){let i=t("input",{attributes:{type:"radio",name:"choice",value:n,required:!0},classes:[],id:""});w.appendChild(i);let a=t("label",{attributes:{for:"choice"},classes:[],id:""});a.innerText=e.options[n],w.appendChild(a)}let n=async e=>{e.preventDefault();const t=document.querySelector('input[name="choice"]:checked');A({value:parseInt(t.value)}),y.removeEventListener("submit",n)};y.addEventListener("submit",n)}}async function C(e){const t=await async function(e){if(!a())throw new Error("WebAuthn is not supported in this browser");const t={publicKey:{...e,challenge:i(e.challenge),user:{...e.user,id:i(e.user.id)},excludeCredentials:e.excludeCredentials?.map(r)}};let l;t.signal=c.createNewAbortSignal();try{l=await navigator.credentials.create(t)}catch(e){throw function({error:e,options:t}){const{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal instanceof AbortSignal)return new s({message:"Registration ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else if("ConstraintError"===e.name){if(!0===n.authenticatorSelection?.requireResidentKey)return new s({message:"Discoverable credentials were required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",cause:e});if("required"===n.authenticatorSelection?.userVerification)return new s({message:"User verification was required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",cause:e})}else{if("InvalidStateError"===e.name)return new s({message:"The authenticator was previously registered",code:"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",cause:e});if("NotAllowedError"===e.name)return new s({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if("NotSupportedError"===e.name)return 0===n.pubKeyCredParams.filter((e=>"public-key"===e.type)).length?new s({message:'No entry in pubKeyCredParams was of type "public-key"',code:"ERROR_MALFORMED_PUBKEYCREDPARAMS",cause:e}):new s({message:"No available authenticator supported any of the specified pubKeyCredParams algorithms",code:"ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",cause:e});if("SecurityError"===e.name){const t=window.location.hostname;if(!o(t))return new s({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e});if(n.rp.id!==t)return new s({message:`The RP ID "${n.rp.id}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else if("TypeError"===e.name){if(n.user.id.byteLength<1||n.user.id.byteLength>64)return new s({message:"User ID was not between 1 and 64 characters",code:"ERROR_INVALID_USER_ID_LENGTH",cause:e})}else if("UnknownError"===e.name)return new s({message:"The authenticator was unable to process the specified options, or could not create a new credential",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}({error:e,options:t})}if(!l)throw new Error("Registration was not completed");const{id:p,rawId:h,response:f,type:y}=l;let w,m,g,E;if("function"==typeof f.getTransports&&(w=f.getTransports()),"function"==typeof f.getPublicKeyAlgorithm)try{m=f.getPublicKeyAlgorithm()}catch(e){d("getPublicKeyAlgorithm()",e)}if("function"==typeof f.getPublicKey)try{const e=f.getPublicKey();null!==e&&(g=n(e))}catch(e){d("getPublicKey()",e)}if("function"==typeof f.getAuthenticatorData)try{E=n(f.getAuthenticatorData())}catch(e){d("getAuthenticatorData()",e)}return{id:p,rawId:n(h),response:{attestationObject:n(f.attestationObject),clientDataJSON:n(f.clientDataJSON),transports:w,publicKeyAlgorithm:m,publicKey:g,authenticatorData:E},type:y,clientExtensionResults:l.getClientExtensionResults(),authenticatorAttachment:u(l.authenticatorAttachment)}}(e.WebAuthnOptions),l=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:m,attestationResponse:t})});(await l.json()).value.success}async function T(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{WebAuthnOptions:null},t=b;e.WebAuthnOptions&&(t=e.WebAuthnOptions);const n=await p(t),i=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:m,assertionResponse:n})});(await i.json()).value.success}async function v(e){if(E){if("function"!=typeof PublicKeyCredential.isConditionalMediationAvailable||!PublicKeyCredential.isConditionalMediationAvailable())return;p(b,!0).then((async e=>{const t=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:m,assertionResponse:e})});(await t.json()).value.success?alert("Login Success!"):alert("Login Failure!")})).catch((async e=>{console.log(e)}))}let n=t("button",{attributes:{},classes:[],id:"usePasskey"});n.innerText="Sign in with a passkey",n.addEventListener("click",(async function e(t){n.removeEventListener("click",e),await T()})),y.appendChild(n)}window.addEventListener("load",(e=>{g=window.PublicKeyCredential&&navigator.credentials&&"function"==typeof navigator.credentials.create&&"function"==typeof navigator.credentials.get,E="function"==typeof PublicKeyCredential.isConditionalMediationAvailable&&PublicKeyCredential.isConditionalMediationAvailable(),h=document.getElementById("collection-message"),f=document.getElementById("collection-header"),y=document.getElementById("collection-form"),w=document.getElementById("collection-inputs"),fetch("/api/login/init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({supportsWebAuthn:g,supportsConditionalUI:E})}).then((async e=>{let t=await e.json();m=t.id,b=t.value.authenticationOptions,t.done||R(t.value)}))}))})();