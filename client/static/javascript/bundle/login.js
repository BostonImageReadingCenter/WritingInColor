(()=>{"use strict";const e={setClass(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];for(let e of t)this.classList.add(e);return this},setId(e){return this.id=e,this},setText(e){return this.innerText=e,this},setHTML(e){return this.innerHTML=e,this}};function t(e,t){let n=document.createElement(e,t);for(let e in t.attributes)n.setAttribute(e,t.attributes[e]);for(let e of t.classes)n.classList.add(e);return t.id&&(n.id=t.id),t.text&&(n.innerText=t.text),t.html&&(n.innerHTML=t.html),n}function n(e){const t=new Uint8Array(e);let n="";for(const e of t)n+=String.fromCharCode(e);return btoa(n).replace(/\+/g,"-").replace(/\//g,"_").replace(/=/g,"")}function a(e){const t=e.replace(/-/g,"+").replace(/_/g,"/"),n=(4-t.length%4)%4,a=t.padEnd(t.length+n,"="),i=atob(a),o=new ArrayBuffer(i.length),r=new Uint8Array(o);for(let e=0;e<i.length;e++)r[e]=i.charCodeAt(e);return o}function i(){return void 0!==window?.PublicKeyCredential&&"function"==typeof window.PublicKeyCredential}function o(e){const{id:t}=e;return{...e,id:a(t),transports:e.transports}}function r(e){return"localhost"===e||/^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$/i.test(e)}Object.keys(e).forEach((t=>{Element.prototype[t]=e[t]}));class s extends Error{constructor({message:e,code:t,cause:n,name:a}){super(e,{cause:n}),this.name=a??n.name,this.code=t}}const l=new class{createNewAbortSignal(){if(this.controller){const e=new Error("Cancelling existing WebAuthn API call for new one");e.name="AbortError",this.controller.abort(e)}const e=new AbortController;return this.controller=e,e.signal}cancelCeremony(){if(this.controller){const e=new Error("Manually cancelling existing WebAuthn API call");e.name="AbortError",this.controller.abort(e),this.controller=void 0}}},c=["cross-platform","platform"];function u(e){if(e&&!(c.indexOf(e)<0))return e}function d(e,t){console.warn(`The browser extension that intercepted this WebAuthn API call incorrectly implemented ${e}. You should report this error to them.\n`,t)}async function p(e,t=!1){if(!i())throw new Error("WebAuthn is not supported in this browser");let c;0!==e.allowCredentials?.length&&(c=e.allowCredentials?.map(o));const d={...e,challenge:a(e.challenge),allowCredentials:c},p={};if(t){if(!await function(){if(!i())return new Promise((e=>e(!1)));const e=window.PublicKeyCredential;return void 0===e.isConditionalMediationAvailable?new Promise((e=>e(!1))):e.isConditionalMediationAvailable()}())throw Error("Browser does not support WebAuthn autofill");if(document.querySelectorAll("input[autocomplete$='webauthn']").length<1)throw Error('No <input> with "webauthn" as the only or last value in its `autocomplete` attribute was detected');p.mediation="conditional",d.allowCredentials=[]}let h;p.publicKey=d,p.signal=l.createNewAbortSignal();try{h=await navigator.credentials.get(p)}catch(e){throw function({error:e,options:t}){const{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal instanceof AbortSignal)return new s({message:"Authentication ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else{if("NotAllowedError"===e.name)return new s({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if("SecurityError"===e.name){const t=window.location.hostname;if(!r(t))return new s({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e});if(n.rpId!==t)return new s({message:`The RP ID "${n.rpId}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else if("UnknownError"===e.name)return new s({message:"The authenticator was unable to process the specified options, or could not create a new assertion signature",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}({error:e,options:p})}if(!h)throw new Error("Authentication was not completed");const{id:y,rawId:w,response:f,type:m}=h;let b;return f.userHandle&&(b=n(f.userHandle)),{id:y,rawId:n(w),response:{authenticatorData:n(f.authenticatorData),clientDataJSON:n(f.clientDataJSON),signature:n(f.signature),userHandle:b},type:m,clientExtensionResults:h.getClientExtensionResults(),authenticatorAttachment:u(h.authenticatorAttachment)}}var h,y,w,f,m,b,g,E,R;async function A(e){console.log(e);let t=e.actions;for(let e of t)"collect"===e.action?C(e):"register-passkey"===e.action?O(e):"authenticate-passkey"===e.action?T(e):"init-conditional-ui"===e.action?_():"show-use-passkey-button"===e.action?I():"exit"===e.action?window.location.reload():"set-authentication-options"===e.action?R=e.authenticationOptions:"redirect"===e.action&&(window.location.href=e.path)}async function v(e){fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:b,...e})}).then((async e=>{let t=await e.json();A(t.value),t.done}))}async function C(e){if(h.innerText=e.message,y.innerText=e.header,f.innerHTML="","email"===e.type){let e=t("input",{attributes:{type:"email",name:"email",placeholder:"Email",required:!0,autocomplete:"email"},classes:[],id:""});f.appendChild(e);let n=async n=>{n.preventDefault(),m.appendChild(t("input",{attributes:{type:"email",name:"email",value:e.value,autocomplete:"email",style:"display: none;"},classes:[],id:""})),v({value:e.value})};w.addEventListener("submit",n,{once:!0})}else if("binary"===e.type){let e=t("button",{attributes:{},classes:[],id:"",text:"yes"}),n=t("button",{attributes:{},classes:[],id:"",text:"no"});f.appendChild(e),f.appendChild(n),e.addEventListener("click",(async e=>{v({value:!0})}),{once:!0}),n.addEventListener("click",(async e=>{v({value:!1})}),{once:!0})}else if("choice"===e.type){for(let n=0;n<e.options.length;n++){let a=t("input",{attributes:{type:"radio",name:"choice",value:n,required:!0},classes:[],id:""});f.appendChild(a);let i=t("label",{attributes:{for:"choice"},classes:[],id:""});i.innerText=e.options[n],f.appendChild(i)}w.addEventListener("submit",(async e=>{e.preventDefault();const t=document.querySelector('input[name="choice"]:checked');v({value:parseInt(t.value)})}),{once:!0})}else if("create-password"===e.type){let e=t("input",{attributes:{type:"password",name:"password",placeholder:"Password",required:!0,autocomplete:"new-password"},classes:[],id:""}),n=t("input",{attributes:{type:"password",placeholder:"Confirm Password",required:!0,autocomplete:"new-password"},classes:[],id:""});f.appendChild(e),f.appendChild(n);let a=async a=>{a.preventDefault(),e.value===n.value?(m.appendChild(t("input",{attributes:{type:"password",name:"password",value:e.value,autocomplete:"current-password",style:"display: none;"},classes:[],id:""})),v({value:e.value})):alert("Passwords do not match.")};w.addEventListener("submit",a,{once:!0})}else if("get-password"===e.type){let e=t("input",{attributes:{type:"password",placeholder:"Password",required:!0,autocomplete:"current-password"},classes:[],id:""});f.appendChild(e),w.addEventListener("submit",(async n=>{n.preventDefault(),m.appendChild(t("input",{attributes:{type:"password",name:"password",style:"display: none;",value:e.value,autocomplete:"current-password"},classes:[],id:""})),v({value:e.value})}))}else if("telephone"===e.type){let e=t("input",{attributes:{type:"tel",placeholder:"Telephone",required:!0,autocomplete:"tel webauthn"},classes:[],id:""});f.appendChild(e),w.addEventListener("submit",(async n=>{n.preventDefault(),m.appendChild(t("input",{attributes:{type:"tel",name:"tel",value:e.value,autocomplete:"tel",style:"display: none;"},classes:[],id:""})),v({value:e.value})}),{once:!0})}}async function O(e){const t=await async function(e){if(!i())throw new Error("WebAuthn is not supported in this browser");const t={publicKey:{...e,challenge:a(e.challenge),user:{...e.user,id:a(e.user.id)},excludeCredentials:e.excludeCredentials?.map(o)}};let c;t.signal=l.createNewAbortSignal();try{c=await navigator.credentials.create(t)}catch(e){throw function({error:e,options:t}){const{publicKey:n}=t;if(!n)throw Error("options was missing required publicKey property");if("AbortError"===e.name){if(t.signal instanceof AbortSignal)return new s({message:"Registration ceremony was sent an abort signal",code:"ERROR_CEREMONY_ABORTED",cause:e})}else if("ConstraintError"===e.name){if(!0===n.authenticatorSelection?.requireResidentKey)return new s({message:"Discoverable credentials were required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_DISCOVERABLE_CREDENTIAL_SUPPORT",cause:e});if("required"===n.authenticatorSelection?.userVerification)return new s({message:"User verification was required but no available authenticator supported it",code:"ERROR_AUTHENTICATOR_MISSING_USER_VERIFICATION_SUPPORT",cause:e})}else{if("InvalidStateError"===e.name)return new s({message:"The authenticator was previously registered",code:"ERROR_AUTHENTICATOR_PREVIOUSLY_REGISTERED",cause:e});if("NotAllowedError"===e.name)return new s({message:e.message,code:"ERROR_PASSTHROUGH_SEE_CAUSE_PROPERTY",cause:e});if("NotSupportedError"===e.name)return 0===n.pubKeyCredParams.filter((e=>"public-key"===e.type)).length?new s({message:'No entry in pubKeyCredParams was of type "public-key"',code:"ERROR_MALFORMED_PUBKEYCREDPARAMS",cause:e}):new s({message:"No available authenticator supported any of the specified pubKeyCredParams algorithms",code:"ERROR_AUTHENTICATOR_NO_SUPPORTED_PUBKEYCREDPARAMS_ALG",cause:e});if("SecurityError"===e.name){const t=window.location.hostname;if(!r(t))return new s({message:`${window.location.hostname} is an invalid domain`,code:"ERROR_INVALID_DOMAIN",cause:e});if(n.rp.id!==t)return new s({message:`The RP ID "${n.rp.id}" is invalid for this domain`,code:"ERROR_INVALID_RP_ID",cause:e})}else if("TypeError"===e.name){if(n.user.id.byteLength<1||n.user.id.byteLength>64)return new s({message:"User ID was not between 1 and 64 characters",code:"ERROR_INVALID_USER_ID_LENGTH",cause:e})}else if("UnknownError"===e.name)return new s({message:"The authenticator was unable to process the specified options, or could not create a new credential",code:"ERROR_AUTHENTICATOR_GENERAL_ERROR",cause:e})}return e}({error:e,options:t})}if(!c)throw new Error("Registration was not completed");const{id:p,rawId:h,response:y,type:w}=c;let f,m,b,g;if("function"==typeof y.getTransports&&(f=y.getTransports()),"function"==typeof y.getPublicKeyAlgorithm)try{m=y.getPublicKeyAlgorithm()}catch(e){d("getPublicKeyAlgorithm()",e)}if("function"==typeof y.getPublicKey)try{const e=y.getPublicKey();null!==e&&(b=n(e))}catch(e){d("getPublicKey()",e)}if("function"==typeof y.getAuthenticatorData)try{g=n(y.getAuthenticatorData())}catch(e){d("getAuthenticatorData()",e)}return{id:p,rawId:n(h),response:{attestationObject:n(y.attestationObject),clientDataJSON:n(y.clientDataJSON),transports:f,publicKeyAlgorithm:m,publicKey:b,authenticatorData:g},type:w,clientExtensionResults:c.getClientExtensionResults(),authenticatorAttachment:u(c.authenticatorAttachment)}}(e.WebAuthnOptions),c=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:b,attestationResponse:t})});let p=await c.json();A(p.value),p.value.data.success?p.done||v({}):alert("Registration Failed.")}async function T(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{action:"authenticate-passkey",WebAuthnOptions:null},t=R;e.WebAuthnOptions&&(t=e.WebAuthnOptions);const n=await p(t),a=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:b,assertionResponse:n})});let i=await a.json();A(i.value),i.value.data.success?i.done||v({}):alert("Authentication Failed.")}async function _(e){if(g&&E){if("function"!=typeof PublicKeyCredential.isConditionalMediationAvailable||!PublicKeyCredential.isConditionalMediationAvailable())return;p(R,!0).then((async e=>{const t=await fetch("/api/login/return",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({id:b,assertionResponse:e})});let n=await t.json();A(n.value),n.value.data.success?n.done||v({}):alert("Login Failure!")})).catch((async e=>{console.log(e)}))}}async function I(e){let n=t("button",{attributes:{},classes:[],id:"usePasskey"});n.innerText="Sign in with a passkey",n.addEventListener("click",(async e=>{await T()}),{once:!0}),w.appendChild(n)}window.addEventListener("load",(async e=>{g=window.PublicKeyCredential&&navigator.credentials&&"function"==typeof navigator.credentials.create&&"function"==typeof navigator.credentials.get,E="function"==typeof PublicKeyCredential.isConditionalMediationAvailable&&await PublicKeyCredential.isConditionalMediationAvailable(),h=document.getElementById("collection-message"),y=document.getElementById("collection-header"),w=document.getElementById("collection-form"),f=document.getElementById("collection-inputs"),m=document.getElementById("hidden-data"),fetch("/api/login/init",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({supportsWebAuthn:g,supportsConditionalUI:E})}).then((async e=>{let t=await e.json();b=t.id,R=t.value.authenticationOptions,A(t.value),t.done}))}))})();